# steps:
#   - id: gae-clone
#     name: "gcr.io/cloud-builders/gcloud"
#     args:
#       - source
#       - repos
#       - clone
#       - ${REPO_NAME}
#   - name: "gcr.io/cloud-builders/gcloud"
#     args:
#       - app
#       - deploy
#       - app-${_DEPLOY_ENV}.yaml
#       - --project=$_DEPLOY_PROJECT_ID
steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}', './django-backend']
# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}']
# Deploy container image to Cloud Run
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Deploying image to Cloud Run'
  args:
    - run
    - deploy
    - $_CLOUD_RUN_SERVICE
    - --image=gcr.io/$PROJECT_ID/${_SERVICE_NAME}
    - --port=$_APP_PORT
    - --region=us-central1
    - --platform=managed
    - --allow-unauthenticated
    # - --project=$_DEPLOY_PROJECT
    # - --security-level=secure-always
    # - --source=.
    # - --timeout=540s
    # Ambiente
    - "--set-env-vars=APP_ENV=${_APP_ENV}"
    #- "--set-env-vars=LOG_LEVEL=${_LOG_LEVEL}"
    # Sequelize Base Datos
    - "--set-env-vars=DB_DIALECT=${_DB_ENGINE}"
    - "--set-env-vars=DB_SOCKET=${_DB_SOCKET}"
    - "--set-env-vars=DB_DATABASE=${_DB_DATABASE}"
    - "--set-env-vars=DB_USERNAME=${_DB_USERNAME}"
    - "--set-env-vars=DB_PASSWORD=${_DB_PASSWORD}"
       # Instancia
    - --memory=$_MEMORY_LIMIT
    - --min-instances=$_INSTANCES_MIN
    - --max-instances=$_INSTANCES_MAX
timeout: "240s"
#  args: ['run', 'deploy', '${_CLOUD_RUN_SERVICE}', '--image', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}','--port','8000', '--region', 'us-central1', '--platform', 'managed', '--allow-unauthenticated']

# steps:
#   - id: "build image"
#     name: "gcr.io/cloud-builders/docker"
#     args: ["build", "-t", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}", "."]

#   - id: "push image"
#     name: "gcr.io/cloud-builders/docker"
#     args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"]

#   - id: "apply migrations"
#     name: "gcr.io/google-appengine/exec-wrapper"
#     args:
#       [
#         "-i",
#         "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
#         "-s",
#         "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
#         "-e",
#         "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
#         "--",
#         "python",
#         "manage.py",
#         "migrate",
#       ]

#   - id: "collect static"
#     name: "gcr.io/google-appengine/exec-wrapper"
#     args:
#       [
#         "-i",
#         "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
#         "-s",
#         "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
#         "-e",
#         "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
#         "--",
#         "python",
#         "manage.py",
#         "collectstatic",
#         "--verbosity",
#         "2",
#         "--no-input",
#       ]

# substitutions:
#   _INSTANCE_NAME: django-instance
#   _REGION: us-central1
#   _SERVICE_NAME: central-devs-psql
#   _SECRET_SETTINGS_NAME: django_settings

# images:
#   - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
